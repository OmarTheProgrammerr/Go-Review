{"ast":null,"code":"var _jsxFileName = \"/Users/omarfares/Desktop/Go/source-front/src/components/Movies.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/v1/movies\").then(response => {\n      if (response.status !== \"200\") {\n        let err = Error;\n        err.message = \"Invalid response code: \" + response.status;\n        this.setState({\n          error: err\n        });\n      }\n\n      return response.json();\n    }).then(json => {\n      this.setState({\n        movies: json.movies,\n        isLoaded: true\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      movies,\n      isLoaded,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose a movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: movies.map(m => /*#__PURE__*/_jsxDEV(Link, {\n            className: \"list-group-item list-group-item-action\",\n            to: `/movies/${m.id}`,\n            children: m.title\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/omarfares/Desktop/Go/source-front/src/components/Movies.js"],"names":["React","Component","Fragment","Link","Movies","state","movies","isLoaded","error","componentDidMount","fetch","then","response","status","err","Error","message","setState","json","render","map","m","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADoC;AAAA;;AAO5CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7B,YAAIC,GAAG,GAAGC,KAAV;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAc,4BAA4BJ,QAAQ,CAACC,MAAnD;AACA,aAAKI,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEM;AAAT,SAAd;AACD;;AACD,aAAOF,QAAQ,CAACM,IAAT,EAAP;AACD,KARH,EASGP,IATH,CASSO,IAAD,IAAU;AACd,WAAKD,QAAL,CACE;AACEX,QAAAA,MAAM,EAAEY,IAAI,CAACZ,MADf;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADF,EAKGC,KAAD,IAAW;AACT,aAAKS,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA;AAFY,SAAd;AAID,OAVH;AAYD,KAtBH;AAuBD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAA8B,KAAKH,KAAzC;;AACA,QAAIG,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE,QAAC,QAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGD,MAAM,CAACc,GAAP,CAAYC,CAAD,iBACV,QAAC,IAAD;AAEE,YAAA,SAAS,EAAC,wCAFZ;AAGE,YAAA,EAAE,EAAG,WAAUA,CAAC,CAACC,EAAG,EAHtB;AAAA,sBAKGD,CAAC,CAACE;AALL,aACOF,CAAC,CAACC,EADT;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD;AACF;;AA1D2C","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/v1/movies\")\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Choose a movie</h2>\n          <hr />\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={`/movies/${m.id}`}\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}