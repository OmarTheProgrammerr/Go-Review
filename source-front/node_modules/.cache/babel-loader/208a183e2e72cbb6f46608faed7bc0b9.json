{"ast":null,"code":"var _jsxFileName = \"/Users/omarfares/Desktop/Go/source-front/src/components/GraphQL.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Input from \"./form-components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GraphQL extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      let value = evt.target.value;\n      this.setState(prevState => ({\n        searchTerm: value\n      }));\n\n      if (value.length > 2) {\n        this.performSearch();\n      } else {\n        this.setState({\n          movies: []\n        });\n      }\n    };\n\n    this.state = {\n      movies: [],\n      isLoaded: false,\n      error: null,\n      alert: {\n        type: \"d-none\",\n        message: \"\"\n      },\n      searchTerm: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  performSearch() {\n    const payload = `\n        {\n            search(titleContains: \"${this.state.searchTerm}\") {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders\n    };\n    fetch(\"http://localhost:4000/v1/graphql\", requestOptions).then(response => response.json()).then(data => {\n      console.log(data);\n      let theList = Object.values(data.data.search);\n      return theList;\n    }).then(theList => {\n      console.log(theList);\n\n      if (theList.length > 0) {\n        this.setState({\n          movies: theList\n        });\n      } else {\n        this.setState({\n          movies: []\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const payload = `\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders\n    };\n    fetch(\"http://localhost:4000/v1/graphql\", requestOptions).then(response => response.json()).then(data => {\n      console.log(data);\n      let theList = Object.values(data.data.list);\n      return theList;\n    }).then(theList => {\n      console.log(theList);\n      this.setState({\n        movies: theList\n      });\n    });\n  }\n\n  render() {\n    let {\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GraphQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"Search\",\n        type: \"text\",\n        name: \"search\",\n        value: this.state.searchTerm,\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: movies.map(m => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"list-group-item list-group-item-action\",\n          href: \"#!\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: m.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"(\", m.year, \") - \", m.runtime, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), m.description.slice(0, 100), \"...\"]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/omarfares/Desktop/Go/source-front/src/components/GraphQL.js"],"names":["React","Component","Fragment","Input","GraphQL","constructor","props","handleChange","evt","value","target","setState","prevState","searchTerm","length","performSearch","movies","state","isLoaded","error","alert","type","message","bind","payload","myHeaders","Headers","append","requestOptions","method","body","headers","fetch","then","response","json","data","console","log","theList","Object","values","search","componentDidMount","list","render","map","m","title","year","runtime","description","slice","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Input from \"./form-components/Input\";\n\nexport default class GraphQL extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoaded: false,\n      error: null,\n      alert: {\n        type: \"d-none\",\n        message: \"\",\n      },\n      searchTerm: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (evt) => {\n    let value = evt.target.value;\n\n    this.setState((prevState) => ({\n      searchTerm: value,\n    }));\n\n    if (value.length > 2) {\n      this.performSearch();\n    } else {\n      this.setState({ movies: [] });\n    }\n  };\n\n  performSearch() {\n    const payload = `\n        {\n            search(titleContains: \"${this.state.searchTerm}\") {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(\"http://localhost:4000/v1/graphql\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let theList = Object.values(data.data.search);\n        return theList;\n      })\n      .then((theList) => {\n        console.log(theList);\n        if (theList.length > 0) {\n          this.setState({\n            movies: theList,\n          });\n        } else {\n          this.setState({\n            movies: [],\n          });\n        }\n      });\n  }\n\n  componentDidMount() {\n    const payload = `\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(\"http://localhost:4000/v1/graphql\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let theList = Object.values(data.data.list);\n        return theList;\n      })\n      .then((theList) => {\n        console.log(theList);\n        this.setState({\n          movies: theList,\n        });\n      });\n  }\n\n  render() {\n    let { movies } = this.state;\n    return (\n      <Fragment>\n        <h2>GraphQL</h2>\n        <hr />\n\n        <Input\n          title={\"Search\"}\n          type={\"text\"}\n          name={\"search\"}\n          value={this.state.searchTerm}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"list-group\">\n          {movies.map((m) => (\n            <a\n              key={m.id}\n              className=\"list-group-item list-group-item-action\"\n              href=\"#!\"\n            >\n              <strong>{m.title}</strong>\n              <br />\n              <small className=\"text-muted\">\n                ({m.year}) - {m.runtime} minutes\n              </small>\n              <br />\n              {m.description.slice(0, 100)}...\n            </a>\n          ))}\n        </div>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}